version: '3.7'

services:
  mysqlDB:
    image: mysql:5.7
    container_name: ${MYSQL_HOST}
    networks:
      - nesjs-network
    volumes:
      - mysql-server:/var/lib/mysql
    environment:
      MYSQL_TCP_PORT: ${MYSQL_TCP_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_TCP_PORT}:${MYSQL_TCP_PORT}"
    env_file: .env
    restart: always

  backendapi:
    container_name: "backendapi"
    build:
      context: .
      target: production
      dockerfile: ./dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV:${NODE_ENV}
    ports:
      - ${MAIN_APP_PORT}:${MAIN_APP_PORT}
      - 9229:9229
    command: npm run start:prod
    env_file:
      - .env
    networks:
      - nesjs-network
    depends_on:
      - mysqlDB

networks:
  nesjs-network:

volumes:
  mysql-server:
# POSTGRES
# version: '3'

# services:
#   database:
#     image: 'postgres:latest'
#     container_name: postgresServer
#     restart: always
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_USER: user
#       POSTGRES_PASSWORD: user1234
#       POSTGRES_DB: myDB
#   volumes:
#     - db-data:/var/lib/postgresql/data/

# volumes:
#   db-data: